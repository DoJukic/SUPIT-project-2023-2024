/*
https://css-tricks.com/snippets/css/a-guide-to-flexbox
*/

body, html{
	min-height: 100vh;
	margin: 0 auto;
	background-color: white;
}

body{
	font-family : "Segoe UI";
	text-align: center;
	
	flex-direction: column;
	flex-wrap: nowrap;
	
	display: flex;
}

.fadeInQuick{
    animation: fadeInAnimation ease 1s;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
	transition: none;
}
 
/* Very simple fade-in hides ugly loading visuals */
@keyframes fadeInAnimation {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

#logInPopup{
	position: fixed;
	z-index: 2000; /* Makes sure it appears above JqueryUI stuff */
	height: 100vh;
	width: 100vw;
	overflow-y: auto;
	transition: background-color 0.25s;

	background: rgba(0,0,0,0.6);

	display: none;
}

/*
This will obviously break if we change how login/login.html works. :has() is very useful and seems to have good support nowadays, so I see no reason not to use it.
*/
#logInPopup:not(:has(div:hover):has(form:hover)):hover{
	background: rgba(0,0,0,0.4);
	transition: background-color 0.25s;
}


#navBar{

	background-color: rgb(0, 0, 0);

	color: white;

	text-align: center;
	vertical-align: middle;
	/*justify-content: space-between; /* Align horizontal */
	justify-content: center !important;
	align-items: start; /* Align vertical */

	flex-grow: 0;
	display: flex;
	flex-wrap: nowrap;
}

.sticky{
	position: sticky;
	top: 0;
	z-index: 1000;
}

.navElement{
	display: flex;
	flex: 1 1 7em;
	/*min-width: 7em;*/

	border-radius: 5px;
	text-align: center;
	/*white-space: nowrap;*/
	
	/* Looks kinda weird otherwise */
	cursor: default;
	font-weight: bold;
	vertical-align: middle;
	text-transform: uppercase;
	
	/* Makes sure navElements don't look weird next to selectableNavElements */
	border: 1px solid rgba(255, 255, 255, 0);
}
.navElementAlt{/* Seperates the visuals from the behaviour */
	min-width: 7em;
	white-space: nowrap;
}
.selectableNavElement{
	cursor: pointer !important;
	border: 1px solid rgba(255, 255, 255, 0.5);
}
.selectableNavElement:hover{
	color:#e27526;
	border-color: #e27526;
}
.selectableNavElement:focus{
	color:#e27526;
	border-color: #e27526;
}
[tabindex] { /* <-- Evil */
	outline: none !important;
}

/* Shows nicely since onclick does things on click release */
.selectableNavElement:active{
	color:#c21b67;
	border-color: #c21b67;
}

#scrollToTop{
	position: fixed;
	width: 100vw;
	height: 100vh;
	display: flex;
	align-items: flex-end !important;
	pointer-events: none;
}


.flexDefaultExplicit{
	flex: 1 1 0px !important;
}

.flexHalfExplicit{
	flex: 0.5 1 0px !important;
}

.flexRowHalfExplicit{
	flex: 0.5 0 0px !important;
}

.spacingDefaultExplicit{
	/* Show at least X font sizes, wraps things very nicely */
	flex-basis: 23em !important;
}

.paddingDefault{
	padding: 1em;
}

.paddingDefaultHalf{
	padding: 0.5em;
}

.marginDefault{
	margin: 2em;
}

.marginDefaultHalf{
	margin: 1em;
}

.marginDefaultDouble{
	margin: 4em;
}

.defaultGap{
	gap: 2em;
}

.defaultGapHalf{
	gap: 1em;
}

.defaultGapDouble{
	gap: 4em;
}

.centered{
	display: flex;
	justify-content: center !important;
	align-items: center !important;
	text-align: center !important;
}

.nowrapExplicit{
	flex-wrap: nowrap !important;
}

#content{
	text-align: center;
}

.column{
	display: flex;
	flex-direction: column;
	flex-wrap: nowrap;
}

.row{
	flex: 1 0 0px;
	
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;

	align-items:stretch;

	justify-content: space-around;
}

.blackTranBG{
	background-color: rgba(0, 0, 0, 0.1);
}

.blackStrongTranBG{
	background-color: rgba(0, 0, 0, 0.5);
}

.whiteTranBG{
	background-color: rgba(255, 255, 255, 0.1);
}

.whiteStrongTranBG{
	background-color: rgba(255, 255, 255, 0.5);
}

.blackBG{
	Color: white;
	background-color: rgb(50, 50, 50);
}

.trueBlackBG{
	Color: white;
	background-color: rgb(0, 0, 0);
}

.blackBlendBG{
	Color: white;
	background-image: linear-gradient(rgb(0, 0, 0), rgb(50, 50, 50));
}

.whiteBG{
	Color: black;
	background-color: rgb(255, 255, 255);
}

.algebraBG{
	Color: white;
	background-image: linear-gradient(-135deg, rgba(194, 27, 103, 1), rgba(226, 117, 38, 1));
}

.algebraInvertedBG{
	Color: white;
	background-image: linear-gradient(45deg, rgba(194, 27, 103, 1), rgba(226, 117, 38, 1));
}

.algebraOrangeBG{
	Color: white;
	background-color: rgba(226, 117, 38, 1);
}

.algebraPurpleBG{
	Color: white;
	background-color: rgba(194, 27, 103, 1);
}

.algebraMatchBG{
	Color: white;
	background-image: linear-gradient(90deg, rgba(194, 27, 103, 1), rgba(226, 117, 38, 1), rgba(226, 117, 38, 1), rgba(194, 27, 103, 1));
}

.simpleBlackBorder{
	border: 2px solid black;
}

.roundedBorder{
	border-radius: 10px;
}

.roundedBorderHalf{
	border-radius: 5px;
}

/*
https://www.w3schools.com/howto/howto_css_loader.asp
animation will stutter when display is changed to flex from css, or maybe it's caused by the fade in animation?
*/
.loader {
	border: 0.3em solid rgba(0, 0, 0, 0.1);
	border-radius: 50%;
	border-top: 0.3em solid rgba(194, 27, 103, 1);
	border-bottom: 0.3em solid rgba(226, 117, 38, 1);
	width: 1em;
	height: 1em;
	-webkit-animation: spin 2s linear infinite; /* Safari */
	animation: spin 2s linear infinite;
}
@keyframes spin {
	0% { transform: rotate(0deg); }
	100% { transform: rotate(360deg); }
}

.observerFadeIn {
	opacity: 0;
	visibility: hidden;
	transition: opacity 2s ease-out, transform 2s cubic-bezier(0.075, 0.5, 0.165, 1);
	transform: translateX(95%); /* 100+% breaks the intersection observer (because there is no intersect) */
	will-change: auto !important; /* Fixes ff memory warning */
}
.observerFadeIn.observerFadeInReportsVisible {
	opacity: 1;
	transform: translateX(0);
	visibility: visible;
}

.observerOpacityOnNavbar {
	opacity: 0;
	visibility: hidden;
	transition: opacity 1s ease-in, visibility 1s ease-in; /* Defaults to 1 during transition */
	will-change: auto !important;
}
.observerOpacityOnNavbar.observerReportsNavbarInvisible {
	opacity: 1;
	visibility: visible;
}

.observerRotateOnNavbar {
	transform: rotate(-180deg);
	transition: transform 0.2s;
	will-change: auto !important;
}
.observerRotateOnNavbar.observerReportsNavbarInvisible {
	transform: rotate(0deg);
}

.imgHeightLimitDefaultExplicit{
	max-height: 50vh !important;
}


h1{
	font-weight: normal;
}

h2{
	text-align: left;
	text-transform: capitalize;
	border-bottom: 1px rgba(0, 0, 0, .1) solid;
}

p{
	text-indent: 3em;
	text-align: justify
}

img{
	max-width: 100%;
	max-height: 100%;
	height: auto;
}

.simpleSpacer{
	flex-grow: 1;
}

input[type=text], input[type=email], input[type=password] {
	min-height: 2.5em;
	outline: none !important;
	border: 0.5px solid black !important;
}

textarea:focus, input[type=text]:focus, input[type=email]:focus, input[type=password]:focus {
	box-shadow: 0 0 3px 1px rgb(94, 158, 214); /* Mirrors jquery UI shadow so they don't look out of place */
}

textarea{
	outline: none !important;
	border: 0.5px solid black !important;
}

#footer{
	margin-top: auto;
	padding-top: 10px;
	font-size: 70%;
	
	flex-wrap: nowrap;

	flex-grow: 0;

	text-align: center;

	background-color: rgb(0, 0, 0);
	color: white;
	padding: 2em;
}
