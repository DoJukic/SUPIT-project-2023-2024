:root{
	--org-primary-color: rgb(226, 117, 38);
	--org-secondary-color: rgb(194, 27, 103);
	
	--faux-black: rgb(15, 15, 15);
}

html,
body {
    margin: 0;
    padding: 0;
}

html{
	height:100%;
}

body {
    color: #333;
    font-family: sans-serif;
    display: flex;
    flex-direction: column;
	
    min-height: 100%;
    
    animation: fadeInAnim ease 1s;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
	transition: none;
}

main {
    flex: 1 0 auto;
	overflow: visible;
}

.centered{
    display: flex;
    justify-content: center;
    align-items: center;
}

flex-row{
    flex: 1 1 0;
    display: flex;
    flex-direction: row;
}

flex-row-balanced{
    flex: 1 1 auto;
    display: flex;
    flex-direction: row;
}

flex-column{
    display: flex;
    flex-direction: column;
}

flex-spacer{
	display: block;
	flex-grow: 1;
}

/*
https://www.w3schools.com/howto/howto_css_loader.asp
animation will stutter when display is changed to flex from css, or maybe it's caused by the fade in animation?
*/
simple-loader {
	border: 0.3em solid rgba(100, 100, 100, 1);
	border-radius: 50%;
	border-top: 0.3em solid var(--org-secondary-color);
	border-bottom: 0.3em solid var(--org-primary-color);
	width: 1em;
	height: 1em;
	animation: spinAnim 2s linear infinite;
}
simple-loader-m {
	margin: -0.2em;
	border: 0.3em solid rgba(100, 100, 100, 1);
	border-radius: 50%;
	border-top: 0.3em solid var(--org-secondary-color);
	border-bottom: 0.3em solid var(--org-primary-color);
	width: 1em;
	height: 1em;
	animation: spinAnim 2s linear infinite;
}

br-half{
	display:block;
	margin-top: 0.5em;
}

/* -------------------- GENERIC VALUES -------------------- */

.defaultSpacing{
	flex-basis: 23rem;
}

.defaultPadding{
	padding: 1rem;
}
.defaultPaddingHalf{
	padding: 0.5rem;
}
.defaultPaddingDouble{
	padding: 2rem;
}

.defaultMargin{
	margin: 2rem;
}
.defaultMarginHalf{
	margin: 1rem;
}
.defaultMarginDouble{
	margin: 4rem;
}

.defaultGap{
	gap: 1rem;
}
.defaultGapHalf{
	gap: 0.5rem;
}
.defaultGapQuarter{
	gap: 0.25rem;
}
.defaultGapDouble{
	gap: 2rem;
}

/* -------------------- BACKGROUNDS -------------------- */

.blackBG{
	Color: white;
	background-color: var(--faux-black);
}

.blackTranBG{
	background-color: rgba(25, 25, 25, 0.1);
}

.algebraBG{
	Color: white;
	background-image: linear-gradient(-135deg, var(--org-secondary-color), var(--org-primary-color));
}

.algebraInvertedBG{
	Color: white;
	background-image: linear-gradient(45deg, var(--org-secondary-color), var(--org-primary-color));
}

.glowOnFocus:focus{
	background-color: var(--org-primary-color) !important;
}

/* -------------------- BORDERS -------------------- */

.roundedBorder{
	border-radius: 10px;
}

.roundedBorderHalf{
	border-radius: 5px;
}

.whiteBorder{
	border: 1px solid white;
}

.blackBorder{
	border: 1px solid black;
}

/* -------------------- SCROLL TO TOP -------------------- */

scroll-to-top-component{
	position: fixed;
	z-index: 1000;

	width: 100vw;
	height: 100vh;

	pointer-events: none;

	display: flex;
	align-items: flex-end !important;
	flex-direction: column;
}

.sttRotateOnTopDistance {
	transform: rotate(0deg);
	transition: transform 0.2s;
	will-change: auto !important;
}
.sttRotateOnTopDistance.sttRotateOnTopDistanceTrigger {
	transform: rotate(-180deg);
}

/* -------------------- PUSH NOTIFICATIONS -------------------- */

push-notifications-component{
	position: fixed;
	z-index: 3000;
	
	height: 100vh;
	width: 100vw;

	pointer-events: none;
	
    display: flex;
	flex-direction: column;
    justify-content: flex-end;

	word-wrap: break-word;
	
	overflow: visible; /* necessary for the animation */
}

push-notification{
	box-shadow: 2px 2px 4px black;

	width: calc(10rem + 10%);
	min-height: 4rem;

	top: 0rem;
	position:relative; /* Animations will rely on changing "top", which needs a specific position value */

	background-color: white;
	color: black;

	border: 1px solid black;

	pointer-events: auto;
	
	display:flex;
	flex-direction: row;

	/* Children do not have to compy with the border radii if we're using this */
	overflow: hidden;
}

push-notification-success{
	background-color: limegreen;
	min-width: 1.5rem;
}
push-notification-info{
	background-color: blueviolet;
	min-width: 1.5rem;
}
push-notification-fail{
	background-color: red;
	min-width: 1.5rem;
}

push-notification-content{
	border-left: 1px solid black;

	display:block;
	flex-grow: 1;
}

/* -------------------- MODAL -------------------- */

modal-component{
	position: fixed;
	z-index: 2000;
	
	height: 100vh;
	width: 100vw;

	overflow-y: auto;
	transition: background-color 0.25s;

	background: rgba(0,0,0,0.6);
	
	opacity: 0;
    display: none;
    justify-content: center;
    align-items: center;
	vertical-align: middle;
}
/* Not the best browser support, but it runs on everything that matters */
modal-component:not(:has(flex-column:hover)):hover{
	background: rgba(0,0,0,0.4);
	transition: background-color 0.25s;
}

/* -------------------- HEADER -------------------- */

header {
	overflow: hidden;

	background-color: var(--faux-black);
	color: white;

	display: flex;
	text-align: center;
	vertical-align: middle;
	justify-content: center;
	align-items: stretch;
	
	flex-grow: 1;
}

/* Seperate the visuals from the behaviour */
nav-element {
	flex: 1 1 7.5em;
	min-width: 7.5em;
	white-space: nowrap;
}
.navElementVisual{
	text-align: center;
    
	display: flex;
    align-items: center;
    justify-content: center;
	
	cursor: default;
	font-weight: bold;
	vertical-align: middle;
	text-transform: uppercase;
	
	/* Makes sure navElements don't look off next to selectableNavElements */
	border: 1px solid rgba(255, 255, 255, 0);
}

/* sne -> selectable nav element, the name was getting a touch too long */
.sneBorderRight{
	border-right: 1px solid rgb(125, 125, 125);
}
.sneBorderLeft{
	border-left: 1px solid rgb(125, 125, 125);
}
.sneBorderBottom{
	border-bottom: 1px solid rgb(125, 125, 125);
}

.selectableNavElement{
	border-radius: 6px;
	cursor: pointer !important;
	border: 1px solid rgb(125, 125, 125);
}
.selectableNavElement:hover{
	color:var(--org-primary-color);
	border-color: var(--org-primary-color);
}
.selectableNavElement:focus{
	color:var(--org-primary-color);
	border-color: var(--org-primary-color);
}
/*
:active can be triggered at the same time as :hover, so !important should be used
Otherwise color seems to be whatever is last in the .css file
(I don't want to rely on that)
*/
.selectableNavElement:active{
	color:var(--org-secondary-color) !important;
	border-color: var(--org-secondary-color) !important;
}

.selectableNavElementAlt{
	cursor: pointer !important;
	border: 1px solid rgba(255, 255, 255, 0.5);
}
.selectableNavElementAlt:hover{
	background-color:var(--org-primary-color);
	border-color: black;
}
.selectableNavElementAlt:focus{
	background-color:var(--org-primary-color);
	border-color: black;
}
.selectableNavElementAlt:active{
	background-color:var(--org-secondary-color) !important;
	border-color: black !important;
}

/* -------------------- FOOTER -------------------- */

footer{
	margin-top: auto;
	padding-top: 10px;
	font-size: 70%;
	
	flex-wrap: nowrap;

	text-align: center;

	background-color: var(--faux-black);
	color: white;
	padding: 2em;
}

/* -------------------- ANIMATIONS -------------------- */

@keyframes fadeInAnim {
    0% { opacity: 0; }
    100% { opacity: 1; }
}

@keyframes spinAnim {
	0% { transform: rotate(0deg); }
	100% { transform: rotate(360deg); }
}

@keyframes phaseOutAnim {
    0% { opacity: 1; }
    100% { opacity: 0; }
}

/* -------------------- OVERRIDES -------------------- */

[tabindex] { /* <-- Evil */
	outline: none !important;
}

input[type=text], input[type=email], input[type=password] {
	min-height: 2rem;
	outline: none !important;
	border: 0.5px solid black !important;
}

textarea:focus, input[type=text]:focus, input[type=email]:focus, input[type=password]:focus {
	box-shadow: 0 0 3px 1px rgb(94, 158, 214); /* Mirrors jquery UI shadow so they don't look out of place */
}

textarea{
	outline: none !important;
	border: 0.5px solid black !important;
}

/* -------------------- JQUERY IMAGES -------------------- */

/* https://stackoverflow.com/questions/1821568/how-to-specify-override-jquery-icon-color */
.ui-icon.ui-white
{
    background-image: url("../res/jquery-ui-1.13.2.custom/images/ui-icons_ffffff_256x240.png") !important;
	margin-top: 0px;
}
